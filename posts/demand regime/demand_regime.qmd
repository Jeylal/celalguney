---
title: "Demand Regime Switzerland"
author: "Celâl Gûney"
format: 
  html:
    toc: true
editor: visual
execute: 
  freeze: true
categories: [Economics]
draft: true
---

```{r}
#| echo: false
#| message: false
#| warning: false
#| include: false


library(tidyverse)
library(ARDL)
library(rdbnomics)
library(lmtest)
library(strucchange)
library(modelsummary)
library(latex2exp)
library(gt)
library(stats)

# Loading data from ameco and oecd using rdbnomics

# [UVGD] Gross domestic product at current prices, annually, mrd chf AMECO/UVGD/CHE.1.0.0.0.UVGD
GDP_n <- rdb(ids = "AMECO/UVGD/CHE.1.0.0.0.UVGD") %>% filter(original_period %in% c(1960:2022)) %>% select(value) %>% ts(start = 1960, end = 2022)


# [PVGD] Price deflator gross domestic product, national currency, 2015 = 100 AMECO/PVGD/CHE.3.1.0.0.PVGD
GDP_deflator <- rdb(ids = "AMECO/PVGD/CHE.3.1.0.0.PVGD") %>% filter(original_period %in% c(1960:2022)) %>% select(value) %>% ts(start = 1960, end = 2022)

# computing real gdp by deflating GDP_n
GDP_real = (GDP_n/GDP_deflator)*100

# [UCPH] Private final consumption expenditure at current prices AMECO/UCPH/CHE.1.0.0.0.UCPH
C_n <- rdb(ids = "AMECO/UCPH/CHE.1.0.0.0.UCPH") %>% filter(original_period %in% c(1960:2022)) %>% select(value) %>% ts(start = 1960, end = 2022)

# [PCPH] Price deflator private final consumption expenditure AMECO/PCPH/CHE.3.1.0.0.PCPH

C_deflator <- rdb(ids = "AMECO/PCPH/CHE.3.1.0.0.PCPH") %>% filter(original_period %in% c(1960:2022)) %>% select(value) %>% ts(start = 1960, end = 2022)

# deflate private final consumption
C_real = (C_n/C_deflator)*100

# [UIGT] Gross fixed capital formation at current prices: total economy AMECO/UIGT/CHE.1.0.0.0.UIGT
I_n <- rdb(ids = "AMECO/UIGT/CHE.1.0.0.0.UIGT") %>% filter(original_period %in% c(1960:2022)) %>% select(value) %>% ts(start = 1960, end = 2022)

# [PIGT] Price deflator gross fixed capital formation: total economy AMECO/PIGT/CHE.3.1.0.0.PIGT
I_deflator <- rdb(ids = "AMECO/PIGT/CHE.3.1.0.0.PIGT") %>% filter(original_period %in% c(1960:2022)) %>% select(value) %>% ts(start = 1960, end = 2022)

# deflate investment
I_real = (I_n/I_deflator)*100


# [UBGS] Net exports of goods and services at current prices (National accounts) AMECO/UBGS/CHE.1.0.0.0.UBGS
NX <- rdb(ids = "AMECO/UBGS/CHE.1.0.0.0.UBGS") %>% filter(original_period %in% c(1960:2022)) %>% select(value) %>% ts(start = 1960, end = 2022)

# [UWCD] Compensation of employees: total economy AMECO/UWCD/CHE.1.0.0.0.UWCD
W_n <- rdb(ids = "AMECO/UWCD/CHE.1.0.0.0.UWCD") %>% filter(original_period %in% c(1960:2022)) %>% select(value) %>% ts(start = 1960, end = 2022)

# [UOGD] Gross operating surplus: total economy AMECO/UOGD/CHE.1.0.0.0.UOGD
R_n <- rdb(ids = "AMECO/UOGD/CHE.1.0.0.0.UOGD") %>% filter(original_period %in% c(1960:2022)) %>% select(value) %>% ts(start = 1960, end = 2022)

# [ZCPIN] National consumer price index (All-items) AMECO/ZCPIN/CHE.3.0.0.0.ZCPIN
cpi <- rdb(ids = "AMECO/ZCPIN/CHE.3.0.0.0.ZCPIN") %>% filter(original_period %in% c(1960:2022)) %>% select(value) %>% ts(start = 1960, end = 2022)

# deflate W and R with CPI

W_real = (W_n/cpi)*100
R_real = (R_n/cpi)*100


# [UCTG] Final consumption expenditure of general government at current prices AMECO/UCTG/CHE.1.0.0.0.UCTG
G_n <- rdb(ids = "AMECO/UCTG/CHE.1.0.0.0.UCTG") %>% filter(original_period %in% c(1960:2022)) %>% select(value) %>% ts(start = 1960, end = 2022)

# [CHE.IRL.A] Switzerland – Long-term interest rate on government bonds – Annual OECD/EO/CHE.IRL.A
i <- rdb(ids = "OECD/EO/CHE.IRL.A") %>% filter(original_period %in% c(1960:2022)) %>% select(value) %>% ts(start = 1960, end = 2022)

# [OTO.GDPV.A] OECD - Total – Gross domestic product, volume, market prices – Annual OECD/EO/OTO.GDPV.A
oecd_real <- rdb(ids = "OECD/EO/OTO.GDPV.A") %>% 
  filter(original_period %in% c(1960:2022)) %>% 
  select(value) %>% 
  ts(start = 1960, end = 2022) - GDP_real # substract swiss real gdp


# compute profit share, wage share and the share of government and private expenditures, net exports and investment in GDP

wageShare = W_n/GDP_n
profitShare = R_n/GDP_n
G_share = G_n/GDP_n
I_share = I_n/GDP_n
C_share = C_n/GDP_n
NX_share = NX/GDP_n

macroch <- cbind(GDP_n, GDP_deflator, GDP_real, C_n, C_deflator, C_real, I_n, I_deflator, I_real, cpi, W_n, W_real, R_n, R_real, NX, G_n, i, wageShare, profitShare, G_share, I_share, C_share, NX_share, oecd_real = oecd_real/10^9) # divide oecd_real by one billion to have same scale as others

macroch <- as_tibble(macroch)
write.csv(macroch, "macroch.csv")


```

```{r import data}
#| echo: false
#| message: false
#| warning: false
macroch <- read_csv("macroch.csv")
macroch <- macroch %>% ts(start = 1960, end = 2022)


```

### Consumption function

$$
C = f(W, R)
$$

With $C$ the real private final consumption expenditures, $W$ the real compensation of employees and $R$ real gross profits (gross operating surplus).

I first estimate an ardl model, selecting the number of lags using the Schwarz information criteria (BIC). In R, one can use the function auto_ardl from the package ARDL. Once the best model is selected, the bounds t test and f tests are conducted to test for cointegration and assess whether an ecm model can be estimated.

```{r}
#| echo: false
#| message: false
#| warning: false
logC = log(macroch$C_real)
logR = log(macroch$R_real)
logW = log(macroch$W_real)


C_fun = auto_ardl(data = cbind(logC, logR, logW),
                  logC ~ logR + logW,
                  max_order = 4, selection = "BIC")$best_model
```

Both the bounds t and f tests do not reject the null hypothesis of no integration. Hence, the consumption function was estimated using first differences:

$$
d[log(C_t)] = \alpha + \beta_1d[log(R_t)] + \beta_2d[log(W_t)]
$$

```{r}
#| echo: false
#| message: false
#| warning: false

dlogC = diff(log(macroch$C_real)) %>% ts(start = 1960, end = 2022)
dlogR = diff(log(macroch$R_real)) %>% ts(start = 1960, end = 2022)
dlogW = diff(log(macroch$W_real)) %>% ts(start = 1960, end = 2022)

C_fun_diff <- lm(data = as_tibble(cbind(dlogC, dlogR, dlogW)),
           dlogC ~ dlogR + dlogW)

C_fun_diff2 <- lm(data = as_tibble(cbind(dlogC, dlogR, dlogW)[1:31,]),
           dlogC ~ dlogR + dlogW)

C_fun_diff3 <- lm(data = as_tibble(cbind(dlogC, dlogR, dlogW)[32:62,]),
           dlogC ~ dlogR + dlogW)

modelsCfun = list("C_fun_diff" = C_fun_diff, "C_fun_diff2" = C_fun_diff2, "C_fun_diff3" = C_fun_diff3)






diagnostic = t(data.frame(
  "Adj R2" = sapply(modelsCfun, function(x){
    summary(x)$adj.r.squared
  }),
  "Durbin-Watson statistics" = sapply(modelsCfun, function(x){
    dwtest(x)[["statistic"]]
  }),
  "RESET test" = sapply(modelsCfun, function(x){
    resettest(x)[["statistic"]]
  }),
  "BG tests" = sapply(modelsCfun, function(x){
    bgtest(x, order = 4)[["p.value"]]
  }),
  "BP tests" = sapply(modelsCfun, function(x){
    bptest(x)[["p.value"]]
  })
))

diagnosticdf = as.data.frame(diagnostic)
diagnosticdf2 = rownames_to_column(diagnosticdf)

modelsummary(list("1961-2022" = C_fun_diff, "1961-1982" = C_fun_diff2,
                  "1983-2022" = C_fun_diff3), stars = TRUE, add_rows = diagnosticdf2, gof_map = NA,
             title = "Consumption Function (dlog[C])")

```

To compute the partial effect of the profit share on the share of consumption in aggregate demand, the coefficients are weighted by the sample average of the ratio of consumption to profits and the share of consumption to wages:

$$\frac{\partial C/Y}{\partial h} = \beta_1 \frac{C}{R} - \beta_2 \frac{C}{W}$$

```{r}
#| echo: false
#| message: false
#| warning: false

C_table = tibble(
  
  "C/R" = mean(macroch$C_n/macroch$R_n),
  "C/W" = mean(macroch$C_n/macroch$W_n),
  "beta_1*(C/R)" = coef(C_fun_diff)[2]*mean(macroch$C_n/macroch$R_n),
  "beta_2*(C/W)" = coef(C_fun_diff)[3]*mean(macroch$C_n/macroch$W_n),
  effect = coef(C_fun_diff)[2]*mean(macroch$C_n/macroch$R_n) - coef(C_fun_diff)[3]*mean(macroch$C_n/macroch$W_n)
  
)

C_table %>% gt
```

### Investment function

$$
I_t = f(Y, h, i)
$$

```{r investment function ardl}
#| echo: false
#| warning: false
#| message: false

lY = log(macroch$GDP_real) %>% ts(start = 1960, end = 2022)

data_I = cbind(dlogY = diff(lY), dh = diff(macroch$profitShare), dlogI = diff(log(macroch$I_real)), dlogR = diff(logR))


I_fun_diff = lm(data = data_I,
                dlogI ~ dlogY + dlogR)

I_fun_diff2 = lm(data = as_tibble(data_I[1:31,]),
                dlogI ~  dlogY + dlogR)

I_fun_diff3 = lm(data = as_tibble(data_I[32:62,]),
                dlogI ~  dlogY + dlogR)

models_I = list(I_fun_diff, I_fun_diff2, I_fun_diff3)

diagnostic_I = t(data.frame(
  "Adj R2" = sapply(models_I, function(x){
    summary(x)$adj.r.squared
  }),
  "Durbin-Watson statistics" = sapply(models_I, function(x){
    dwtest(x)[["statistic"]]
  }),
  "RESET test" = sapply(models_I, function(x){
    resettest(x)[["statistic"]]
  }),
  "BG tests" = sapply(models_I, function(x){
    bgtest(x, order = 4)[["p.value"]]
  }),
  "BP tests" = sapply(models_I, function(x){
    bptest(x)[["p.value"]]
  })
))


diagnosti_Idf = as.data.frame(diagnostic_I)
diagnostic_I_df2 = rownames_to_column(diagnosti_Idf)

modelsummary(list("1961-2022" = I_fun_diff, "1961-1982" = I_fun_diff2,
                  "1983-2022" = I_fun_diff3), stars = TRUE, add_rows = diagnosticdf2, gof_map = NA,
             title = "Investment function")
```

We cannot conclude anything regarding the effect of profit share on investment, the effect will thus be condsidered to be equal to zero.

### Net exports function

$$
NX_t = f(h, Y^f, Y)
$$

```{r}
#| echo: false
#| message: false
#| warning: false

NX = macroch$NX_share 
logOECD = log(macroch$oecd_real) 
logY = log(macroch$GDP_real)
h = macroch$profitShare

data_NX = cbind(NX, logOECD, logY, h)
nx_fun = auto_ardl(data = data_NX,
                   formula = NX ~  logOECD + logY + h ,
                   max_order = 4, selection = "BIC")$best_model
nx_fun %>% summary
nx_uecm <- uecm(nx_fun, case = 3)
nx_uecm %>% summary

```
